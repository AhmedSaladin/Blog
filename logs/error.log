{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","message":"\"birth_date\" is not allowed to be empty \"birth_date\" is not allowed to be empty","stack":"ValidationError: \"birth_date\" is not allowed to be empty","timestamp":"2021-03-20 00:36:01"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","message":"\"birth_date\" is not allowed to be empty \"birth_date\" is not allowed to be empty","stack":"ValidationError: \"birth_date\" is not allowed to be empty","timestamp":"2021-03-20 00:36:38"}
{"service":"user-service","level":"error","message":"bb is not defined bb is not defined","stack":"ReferenceError: bb is not defined\n    at sign_up (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\controllers\\user.js:13:13)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)","timestamp":"2021-03-20 00:40:59"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","message":"\"birth_date\" is not allowed to be empty \"birth_date\" is not allowed to be empty","stack":"ValidationError: \"birth_date\" is not allowed to be empty","timestamp":"2021-03-20 00:54:20"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","message":"\"birth_date\" is not allowed to be empty \"birth_date\" is not allowed to be empty","stack":"ValidationError: \"birth_date\" is not allowed to be empty","timestamp":"2021-03-20 00:54:50"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","message":"\"birth_date\" is not allowed to be empty \"birth_date\" is not allowed to be empty","stack":"ValidationError: \"birth_date\" is not allowed to be empty","timestamp":"2021-03-20 00:55:07"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","message":"\"birth_date\" is not allowed to be empty \"birth_date\" is not allowed to be empty","stack":"ValidationError: \"birth_date\" is not allowed to be empty","timestamp":"2021-03-20 00:56:44"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","message":"\"birth_date\" is not allowed to be empty \"birth_date\" is not allowed to be empty","stack":"ValidationError: \"birth_date\" is not allowed to be empty","timestamp":"2021-03-20 00:57:25"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","message":"\"birth_date\" is not allowed to be empty \"birth_date\" is not allowed to be empty","stack":"ValidationError: \"birth_date\" is not allowed to be empty","timestamp":"2021-03-20 00:57:56"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","message":"\"birth_date\" is not allowed to be empty \"birth_date\" is not allowed to be empty","stack":"ValidationError: \"birth_date\" is not allowed to be empty","timestamp":"2021-03-20 00:58:43"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:00:42"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:01:03"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:01:31"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:01:57"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:03:04"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:03:23"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:04:54"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:05:32"}
{"_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:07:27"}
{"_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:08:34"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:09:18"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:10:01"}
{"message":"notNull Violation: users.email cannot be null,\nnotNull Violation: users.password cannot be null,\nnotNull Violation: users.first_name cannot be null,\nnotNull Violation: users.last_name cannot be null,\nnotNull Violation: users.birth_date cannot be null","level":"error","service":"user-service","timestamp":"2021-03-20 01:10:33"}
{"_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:15:37"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:19:12"}
{"message":"\"birth_date\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:19:36"}
{"_original":{"first_name":"loki","last_name":"lol","email":"loki@somewhere.com","password":"true","birth_date":""},"details":[{"message":"\"birth_date\" is not allowed to be empty","path":["birth_date"],"type":"string.empty","context":{"label":"birth_date","value":"","key":"birth_date"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:20:12"}
{"message":"notNull Violation: users.email cannot be null,\nnotNull Violation: users.password cannot be null,\nnotNull Violation: users.first_name cannot be null,\nnotNull Violation: users.last_name cannot be null,\nnotNull Violation: users.birth_date cannot be null","level":"error","service":"user-service","timestamp":"2021-03-20 01:22:43"}
{"message":"notNull Violation: users.email cannot be null,\nnotNull Violation: users.password cannot be null,\nnotNull Violation: users.first_name cannot be null,\nnotNull Violation: users.last_name cannot be null,\nnotNull Violation: users.birth_date cannot be null","level":"error","service":"user-service","timestamp":"2021-03-20 01:23:17"}
{"message":"notNull Violation: users.email cannot be null,\nnotNull Violation: users.password cannot be null,\nnotNull Violation: users.first_name cannot be null,\nnotNull Violation: users.last_name cannot be null,\nnotNull Violation: users.birth_date cannot be null","level":"error","service":"user-service","timestamp":"2021-03-20 01:24:11"}
{"message":"notNull Violation: users.email cannot be null,\nnotNull Violation: users.password cannot be null,\nnotNull Violation: users.first_name cannot be null,\nnotNull Violation: users.last_name cannot be null,\nnotNull Violation: users.birth_date cannot be null","level":"error","service":"user-service","timestamp":"2021-03-20 01:25:27"}
{"name":"SequelizeValidationError","errors":[{"message":"users.email cannot be null","type":"notNull Violation","path":"email","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:26:39.168Z","createdAt":"2021-03-19T23:26:39.168Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:26:39.168Z","createdAt":"2021-03-19T23:26:39.168Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.first_name cannot be null","type":"notNull Violation","path":"first_name","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:26:39.168Z","createdAt":"2021-03-19T23:26:39.168Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.last_name cannot be null","type":"notNull Violation","path":"last_name","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:26:39.168Z","createdAt":"2021-03-19T23:26:39.168Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.birth_date cannot be null","type":"notNull Violation","path":"birth_date","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:26:39.168Z","createdAt":"2021-03-19T23:26:39.168Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:26:39"}
{"name":"SequelizeValidationError","errors":[{"message":"users.email cannot be null","type":"notNull Violation","path":"email","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:27:21.603Z","createdAt":"2021-03-19T23:27:21.603Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:27:21.603Z","createdAt":"2021-03-19T23:27:21.603Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.first_name cannot be null","type":"notNull Violation","path":"first_name","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:27:21.603Z","createdAt":"2021-03-19T23:27:21.603Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.last_name cannot be null","type":"notNull Violation","path":"last_name","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:27:21.603Z","createdAt":"2021-03-19T23:27:21.603Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.birth_date cannot be null","type":"notNull Violation","path":"birth_date","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:27:21.603Z","createdAt":"2021-03-19T23:27:21.603Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:27:21"}
{"name":"SequelizeValidationError","errors":[{"message":"users.email cannot be null","type":"notNull Violation","path":"email","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:28:53.429Z","createdAt":"2021-03-19T23:28:53.429Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:28:53.429Z","createdAt":"2021-03-19T23:28:53.429Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.first_name cannot be null","type":"notNull Violation","path":"first_name","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:28:53.429Z","createdAt":"2021-03-19T23:28:53.429Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.last_name cannot be null","type":"notNull Violation","path":"last_name","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:28:53.429Z","createdAt":"2021-03-19T23:28:53.429Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"users.birth_date cannot be null","type":"notNull Violation","path":"birth_date","value":null,"origin":"CORE","instance":{"pic":"https://i.kym-cdn.com/entries/icons/original/000/034/213/cover2.jpg","id":null,"updatedAt":"2021-03-19T23:28:53.429Z","createdAt":"2021-03-19T23:28:53.429Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:28:53"}
{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"","birth_date":"1994-12-15"},"details":[{"message":"\"password\" is not allowed to be empty","path":["password"],"type":"string.empty","context":{"label":"password","value":"","key":"password"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:31:13"}
{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"","birth_date":"1994-12-15"},"details":[{"message":"\"password\" is not allowed to be empty","path":["password"],"type":"string.empty","context":{"label":"password","value":"","key":"password"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:32:42"}
{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"","birth_date":"1994-12-15"},"details":[{"message":"\"password\" is not allowed to be empty","path":["password"],"type":"string.empty","context":{"label":"password","value":"","key":"password"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:33:14"}
{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"","birth_date":"1994-12-15"},"details":[{"message":"\"password\" is not allowed to be empty","path":["password"],"type":"string.empty","context":{"label":"password","value":"","key":"password"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:33:46"}
{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"","birth_date":"1994-12-15"},"details":[{"message":"\"password\" is not allowed to be empty","path":["password"],"type":"string.empty","context":{"label":"password","value":"","key":"password"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:34:22"}
{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"","birth_date":"1994-12-15"},"details":[{"message":"\"password\" is not allowed to be empty","path":["password"],"type":"string.empty","context":{"label":"password","value":"","key":"password"}}],"level":"error","service":"user-service","timestamp":"2021-03-20 01:34:38"}
{"service":"user-service","level":"error","timestamp":"2021-03-20 01:35:32"}
{"message":"\"password\" is not allowed to be empty","level":"error","service":"user-service","timestamp":"2021-03-20 01:35:49"}
{"message":"\"first_name\" is required","level":"error","service":"user-service","timestamp":"2021-03-20 01:39:42"}
{"message":"Cannot access 'email' before initialization","level":"error","service":"user-service","timestamp":"2021-03-20 01:40:42"}
{"message":"Cannot read property 'validateAsync' of undefined","level":"error","service":"user-service","timestamp":"2021-03-20 02:06:20"}
{"message":"Cannot read property 'validateAsync' of undefined","level":"error","service":"user-service","timestamp":"2021-03-20 02:07:01"}
{"message":"Cannot read property 'validateAsync' of undefined","level":"error","service":"user-service","timestamp":"2021-03-20 02:07:43"}
{"level":"error","service":"user-service","timestamp":"2021-03-20 02:08:07"}
{"level":"error","service":"user-service","timestamp":"2021-03-20 02:12:58"}
{"level":"error","service":"user-service","timestamp":"2021-03-20 02:14:19"}
{"level":"error","service":"user-service","timestamp":"2021-03-20 02:26:53"}
{"service":"user-service","level":"error","message":"Error: No authorization header found. No authorization header found.","stack":"Error: No authorization header found.\n    at exports.authorized (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\middlewares\\is_auth.js:9:19)\n    at Layer.handle [as handle_request] (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\asyur\\OneDrive\\Desktop\\node\\blog\\node_modules\\express\\lib\\router\\index.js:47:12)","timestamp":"2021-03-20 02:28:05"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-20 02:28:46"}
{"service":"user-service","level":"error","message":{"name":"JsonWebTokenError","message":"jwt malformed"},"timestamp":"2021-03-20 02:28:57"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-20 02:51:58"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-20 02:52:18"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"password\" with value \"h\" fails to match the required pattern: /^[a-zA-Z0-9]{3,30}$/","path":["password"],"type":"string.pattern.base","context":{"regex":{},"value":"h","label":"password","key":"password"}}]},"timestamp":"2021-03-20 02:56:02"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 02:57:12"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 02:58:14"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}],"level":"error","message":"ValidationError: \"email\" must be a valid email \"email\" must be a valid email","stack":"ValidationError: \"email\" must be a valid email","timestamp":"2021-03-20 02:59:13"}
{"service":"user-service","_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}],"level":"error","message":"ValidationError: \"email\" must be a valid email \"email\" must be a valid email","stack":"ValidationError: \"email\" must be a valid email","timestamp":"2021-03-20 03:11:15"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:11:50"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:12:13"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:12:25"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:12:57"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:13:21"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:13:41"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:14:08"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:14:39"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:15:27"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:15:58"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:16:22"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:16:38"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:17:10"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:18:05"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:18:54"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"email\" must be a valid email","path":["email"],"type":"string.email","context":{"value":"lokii@somewhere","invalids":["lokii@somewhere"],"label":"email","key":"email"}}]},"timestamp":"2021-03-20 03:19:17"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"password\" with value \"h\" fails to match the required pattern: /^[a-zA-Z0-9]{3,30}$/","path":["password"],"type":"string.pattern.base","context":{"regex":{},"value":"h","label":"password","key":"password"}}]},"timestamp":"2021-03-20 03:19:27"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"password\" length must be at least 5 characters long","path":["password"],"type":"string.min","context":{"limit":5,"value":"h","label":"password","key":"password"}}]},"timestamp":"2021-03-20 03:20:16"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-20 03:22:31"}
{"service":"user-service","level":"error","message":{"name":"JsonWebTokenError","message":"jwt malformed"},"timestamp":"2021-03-20 03:23:13"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-20 03:28:06"}
{"service":"user-service","level":"error","message":{"_original":{},"details":[{"message":"\"title\" is required","path":["title"],"type":"any.required","context":{"label":"title","key":"title"}}]},"timestamp":"2021-03-20 03:28:26"}
{"service":"user-service","level":"error","message":{"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"3","2021-03-20 01:50:53","2021-03-20 01:50:53"]},"original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"3","2021-03-20 01:50:53","2021-03-20 01:50:53"]},"sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"3","2021-03-20 01:50:53","2021-03-20 01:50:53"],"fields":["blogId"],"table":"blogs","value":"3","index":"liked_blogs_ibfk_2","reltype":"child"},"timestamp":"2021-03-20 03:50:53"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-20 03:54:07"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-20 03:56:37"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-20 03:57:06"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-20 03:57:13"}
{"service":"user-service","level":"error","message":{"name":"SequelizeDatabaseError","parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sqlState":"42S22","sqlMessage":"Unknown column 'user->blogs.blogs' in 'field list'","sql":"SELECT `liked_blogs`.`id`, `liked_blogs`.`userId`, `liked_blogs`.`blogId`, `liked_blogs`.`createdAt`, `liked_blogs`.`updatedAt`, `user`.`id` AS `user.id`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`first_name` AS `user.first_name`, `user`.`last_name` AS `user.last_name`, `user`.`pic` AS `user.pic`, `user`.`birth_date` AS `user.birth_date`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `user->blogs`.`id` AS `user.blogs.id`, `user->blogs`.`title` AS `user.blogs.title`, `user->blogs`.`article` AS `user.blogs.article`, `user->blogs`.`createdAt` AS `user.blogs.createdAt`, `user->blogs`.`updatedAt` AS `user.blogs.updatedAt`, `user->blogs`.`author` AS `user.blogs.author`, `user->blogs`.`blogs` AS `user.blogs.blogs`, `blog`.`id` AS `blog.id`, `blog`.`title` AS `blog.title`, `blog`.`article` AS `blog.article`, `blog`.`createdAt` AS `blog.createdAt`, `blog`.`updatedAt` AS `blog.updatedAt`, `blog`.`author` AS `blog.author`, `blog`.`blogs` AS `blog.blogs`, `blog->user`.`id` AS `blog.user.id`, `blog->user`.`email` AS `blog.user.email`, `blog->user`.`password` AS `blog.user.password`, `blog->user`.`first_name` AS `blog.user.first_name`, `blog->user`.`last_name` AS `blog.user.last_name`, `blog->user`.`pic` AS `blog.user.pic`, `blog->user`.`birth_date` AS `blog.user.birth_date`, `blog->user`.`createdAt` AS `blog.user.createdAt`, `blog->user`.`updatedAt` AS `blog.user.updatedAt` FROM `liked_blogs` AS `liked_blogs` LEFT OUTER JOIN `users` AS `user` ON `liked_blogs`.`userId` = `user`.`id` LEFT OUTER JOIN `blogs` AS `user->blogs` ON `user`.`id` = `user->blogs`.`blogs` LEFT OUTER JOIN `blogs` AS `blog` ON `liked_blogs`.`blogId` = `blog`.`id` LEFT OUTER JOIN `users` AS `blog->user` ON `blog`.`author` = `blog->user`.`id` WHERE `liked_blogs`.`userId` = 1;"},"original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sqlState":"42S22","sqlMessage":"Unknown column 'user->blogs.blogs' in 'field list'","sql":"SELECT `liked_blogs`.`id`, `liked_blogs`.`userId`, `liked_blogs`.`blogId`, `liked_blogs`.`createdAt`, `liked_blogs`.`updatedAt`, `user`.`id` AS `user.id`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`first_name` AS `user.first_name`, `user`.`last_name` AS `user.last_name`, `user`.`pic` AS `user.pic`, `user`.`birth_date` AS `user.birth_date`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `user->blogs`.`id` AS `user.blogs.id`, `user->blogs`.`title` AS `user.blogs.title`, `user->blogs`.`article` AS `user.blogs.article`, `user->blogs`.`createdAt` AS `user.blogs.createdAt`, `user->blogs`.`updatedAt` AS `user.blogs.updatedAt`, `user->blogs`.`author` AS `user.blogs.author`, `user->blogs`.`blogs` AS `user.blogs.blogs`, `blog`.`id` AS `blog.id`, `blog`.`title` AS `blog.title`, `blog`.`article` AS `blog.article`, `blog`.`createdAt` AS `blog.createdAt`, `blog`.`updatedAt` AS `blog.updatedAt`, `blog`.`author` AS `blog.author`, `blog`.`blogs` AS `blog.blogs`, `blog->user`.`id` AS `blog.user.id`, `blog->user`.`email` AS `blog.user.email`, `blog->user`.`password` AS `blog.user.password`, `blog->user`.`first_name` AS `blog.user.first_name`, `blog->user`.`last_name` AS `blog.user.last_name`, `blog->user`.`pic` AS `blog.user.pic`, `blog->user`.`birth_date` AS `blog.user.birth_date`, `blog->user`.`createdAt` AS `blog.user.createdAt`, `blog->user`.`updatedAt` AS `blog.user.updatedAt` FROM `liked_blogs` AS `liked_blogs` LEFT OUTER JOIN `users` AS `user` ON `liked_blogs`.`userId` = `user`.`id` LEFT OUTER JOIN `blogs` AS `user->blogs` ON `user`.`id` = `user->blogs`.`blogs` LEFT OUTER JOIN `blogs` AS `blog` ON `liked_blogs`.`blogId` = `blog`.`id` LEFT OUTER JOIN `users` AS `blog->user` ON `blog`.`author` = `blog->user`.`id` WHERE `liked_blogs`.`userId` = 1;"},"sql":"SELECT `liked_blogs`.`id`, `liked_blogs`.`userId`, `liked_blogs`.`blogId`, `liked_blogs`.`createdAt`, `liked_blogs`.`updatedAt`, `user`.`id` AS `user.id`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`first_name` AS `user.first_name`, `user`.`last_name` AS `user.last_name`, `user`.`pic` AS `user.pic`, `user`.`birth_date` AS `user.birth_date`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `user->blogs`.`id` AS `user.blogs.id`, `user->blogs`.`title` AS `user.blogs.title`, `user->blogs`.`article` AS `user.blogs.article`, `user->blogs`.`createdAt` AS `user.blogs.createdAt`, `user->blogs`.`updatedAt` AS `user.blogs.updatedAt`, `user->blogs`.`author` AS `user.blogs.author`, `user->blogs`.`blogs` AS `user.blogs.blogs`, `blog`.`id` AS `blog.id`, `blog`.`title` AS `blog.title`, `blog`.`article` AS `blog.article`, `blog`.`createdAt` AS `blog.createdAt`, `blog`.`updatedAt` AS `blog.updatedAt`, `blog`.`author` AS `blog.author`, `blog`.`blogs` AS `blog.blogs`, `blog->user`.`id` AS `blog.user.id`, `blog->user`.`email` AS `blog.user.email`, `blog->user`.`password` AS `blog.user.password`, `blog->user`.`first_name` AS `blog.user.first_name`, `blog->user`.`last_name` AS `blog.user.last_name`, `blog->user`.`pic` AS `blog.user.pic`, `blog->user`.`birth_date` AS `blog.user.birth_date`, `blog->user`.`createdAt` AS `blog.user.createdAt`, `blog->user`.`updatedAt` AS `blog.user.updatedAt` FROM `liked_blogs` AS `liked_blogs` LEFT OUTER JOIN `users` AS `user` ON `liked_blogs`.`userId` = `user`.`id` LEFT OUTER JOIN `blogs` AS `user->blogs` ON `user`.`id` = `user->blogs`.`blogs` LEFT OUTER JOIN `blogs` AS `blog` ON `liked_blogs`.`blogId` = `blog`.`id` LEFT OUTER JOIN `users` AS `blog->user` ON `blog`.`author` = `blog->user`.`id` WHERE `liked_blogs`.`userId` = 1;"},"timestamp":"2021-03-20 04:48:08"}
{"service":"user-service","level":"error","message":{"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-20 02:49:08","2021-03-20 02:49:08"]},"original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-20 02:49:08","2021-03-20 02:49:08"]},"sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-20 02:49:08","2021-03-20 02:49:08"],"fields":["blogId"],"table":"blogs","value":"4","index":"liked_blogs_ibfk_2","reltype":"child"},"timestamp":"2021-03-20 04:49:08"}
{"service":"user-service","level":"error","message":{"name":"SequelizeValidationError","errors":[{"message":"blogs.my_articles cannot be null","type":"notNull Violation","path":"my_articles","value":null,"origin":"CORE","instance":{"id":null,"author":1,"title":"Poetry","article":"Poetry, literature that evokes a concentrated imaginative awareness of experience or a specific emotional response through language chosen and arranged for its meaning, sound, and rhythm.","updatedAt":"2021-03-20T02:58:32.659Z","createdAt":"2021-03-20T02:58:32.659Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]},"timestamp":"2021-03-20 04:58:32"}
{"service":"user-service","level":"error","message":{"name":"SequelizeValidationError","errors":[{"message":"blogs.my_articles cannot be null","type":"notNull Violation","path":"my_articles","value":null,"origin":"CORE","instance":{"id":null,"author":1,"title":"Poetry","article":"Poetry, literature that evokes a concentrated imaginative awareness of experience or a specific emotional response through language chosen and arranged for its meaning, sound, and rhythm.","updatedAt":"2021-03-20T03:05:35.755Z","createdAt":"2021-03-20T03:05:35.755Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]},"timestamp":"2021-03-20 05:05:35"}
{"service":"user-service","level":"error","message":{"name":"SequelizeValidationError","errors":[{"message":"blogs.my_articles cannot be null","type":"notNull Violation","path":"my_articles","value":null,"origin":"CORE","instance":{"id":null,"author":1,"title":"Poetry","article":"Poetry, literature that evokes a concentrated imaginative awareness of experience or a specific emotional response through language chosen and arranged for its meaning, sound, and rhythm.","updatedAt":"2021-03-20T03:07:05.644Z","createdAt":"2021-03-20T03:07:05.644Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]},"timestamp":"2021-03-20 05:07:05"}
{"service":"user-service","level":"error","message":{"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-30 16:31:12","2021-03-30 16:31:12"]},"original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-30 16:31:12","2021-03-30 16:31:12"]},"sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-30 16:31:12","2021-03-30 16:31:12"],"fields":["blogId"],"table":"blogs","value":"4","index":"liked_blogs_ibfk_2","reltype":"child"},"timestamp":"2021-03-30 18:31:12"}
{"service":"user-service","level":"error","message":{"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-30 16:31:45","2021-03-30 16:31:45"]},"original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-30 16:31:45","2021-03-30 16:31:45"]},"sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-30 16:31:45","2021-03-30 16:31:45"],"fields":["blogId"],"table":"blogs","value":"4","index":"liked_blogs_ibfk_2","reltype":"child"},"timestamp":"2021-03-30 18:31:45"}
{"service":"user-service","level":"error","message":{"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-30 16:32:35","2021-03-30 16:32:35"]},"original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlState":"23000","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`blog`.`liked_blogs`, CONSTRAINT `liked_blogs_ibfk_2` FOREIGN KEY (`blogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)","sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-30 16:32:35","2021-03-30 16:32:35"]},"sql":"INSERT INTO `liked_blogs` (`id`,`userId`,`blogId`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);","parameters":[1,"4","2021-03-30 16:32:35","2021-03-30 16:32:35"],"fields":["blogId"],"table":"blogs","value":"4","index":"liked_blogs_ibfk_2","reltype":"child"},"timestamp":"2021-03-30 18:32:35"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 21:51:23"}
{"service":"user-service","level":"error","message":{"_original":{"title":"title of article","article":"The body of article."},"details":[{"message":"\"article\" length must be at least 50 characters long","path":["article"],"type":"string.min","context":{"limit":50,"value":"The body of article.","label":"article","key":"article"}}]},"timestamp":"2021-03-30 21:57:00"}
{"service":"user-service","level":"error","message":{"expose":true,"statusCode":400,"status":400,"body":"{\r\n    \"title\":\"life is good\",\r\n    \"article\":\"\r\nWorkin' on the weekend like usual\r\nWay off in the deep end like usual\r\nNiggas swear they passed us, they doin' too much\r\nHaven't done my taxes, I'm too turnt up\r\nVirgil got a Patek on my wrist going nuts\r\nNiggas caught me slipping once, okay, so what?\r\nSomeone hit your block up, I'd tell you if it was us\r\nManor house in Rosewood, this shit too plush\r\nSay my days are numbered, but I keep wakin' up\r\nKnow you see my texts, baby, please say somethin'\r\nWine by the glass, your man a cheapskate, huh?\r\nNiggas gotta move off my release day, huh?\r\nBitch, this is fame, not clout\r\nI don't even know what that's about, watch your mouth\r\nBaby got a ego twice the size of the crib\r\nI can never tell her shit, it is what it is\r\nSaid what I had to and did what I did\r\nNever turn my back on FBG, God forbid\r\nVirgil got the Patek on my wrist doing frontflips\r\nGiving you my number, but don't hit me on no dumb shit\r\nWorkin' on the weekend like usual\r\nWay off in the deep end like usual (like usual)\r\nNiggas swear they passed us, they doin' too much\r\nHaven't done my taxes, I'm too turnt up\r\nVirgil got a Patek on my wrist going nuts\r\nNiggas caught me slipping once, okay, so what?\r\nSomeone hit your block up, I'd tell you if it was us\r\nManor house in Rosewood, this shit too plush\r\nIt's cool, man, got red bottoms on\r\nLife is good, you know what I mean? Like\r\nUh, hunnid thousand for the cheapest ring\r\nOn a nigga finger, lil' bitch, woo\r\nI done flew one out to Spain to be in my domain\r\nAnd Audemar'd the bitch, woo\r\nDropped three dollars on a ring\r\nCall it Bentley truck, lil' bitch, woo\r\nI was in the trap serving cocaine\r\nI ain't been the same since, woo\r\nGranny, she was standing right there\r\nWhile I catch a play on a brick, woo\r\nI make them lil' niggas go haywire\r\nTaliban in this bitch, woo\r\nI done been down bad in them trenches\r\nHad to ride with that stick, woo\r\nWho gave you pills? Who gave you that dust?\r\nPluto sent you on a lick, woo\r\nToo many convicts\r\nThey enrolled me to play in this shit, woo\r\nI'm tryna avoid nonsense\r\nGet Osama sprayed in this bitch, woo\r\nThey had the candlelight, lighting it up\r\nNigga, anybody could get it, woo\r\nI'm on a PJ lighting it up\r\nBackwood full of sticky, woo\r\nI'm tryna tote that Draco in London\r\nAnd it's an extended, woo\r\nThey gotta stretch a nigga out\r\nWe gon' die for this shit, woo\r\nYeah, I ride for my niggas\r\nI lie to my bitch, woo\r\nWe some poor, high-class niggas\r\nMade it, we rich, yeah\r\nI was at the bando\r\nGot a penthouse for a closet, woo\r\nIt's like a chandelier\r\nOn my neck, my wrist, woo\r\nI got pink toes\r\nThey talk different languages, woo\r\nGot Promethazine in my blood and Percocet\r\nYeah, hunnid thousand for the cheapest ring\r\nOn a nigga finger, lil' bitch, woo\r\nI done flew one out to Spain to be in my domain\r\nAnd Audemar'd the bitch, woo\r\nDropped three dollars on a ring\r\nCall it Bentley truck, lil' bitch, woo\r\nI was in the trap serving cocaine\r\nI ain't been the same since\r\nRacks by the ton I call up Serena\r\nI go tremendo for new fettuccini\r\nAll fact though, clarity pinky\r\nAll fact though, we order up the Fiji\r\nI'm in the loop with the voo\r\nI'm in the loop with the woo\r\nWhich one of you working?\r\nI put your face on the news\r\nI put the pussy on the shirt\r\nAfter I murk, then make 'em go shoot up the hearse\r\nCost me a quarter bird\r\nNigga it's worth it, then you a maniac\r\nA fucking alien, how you splurgin'?\r\nGot that kitty cat, I'm having fun with that\r\nGoin' Birkin\r\nYeah, hunnid thousand for the cheapest ring\r\nOn a nigga finger, lil' bitch, woo\r\nI done flew one out to Spain to be in my domain\r\nAnd Audemar'd the bitch, woo\r\nDropped three dollars on a ring\r\nCall it Bentley truck, lil' bitch, woo\r\nI was in the trap serving cocaine\r\nI ain't been the same since\r\n\"\r\n}","type":"entity.parse.failed"},"timestamp":"2021-03-30 22:03:23"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:15:18"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:15:59"}
{"service":"user-service","level":"error","message":{"_original":{"article":"update method is work great.","title":"it updated"},"details":[{"message":"\"article\" length must be at least 50 characters long","path":["article"],"type":"string.min","context":{"limit":50,"value":"update method is work great.","label":"article","key":"article"}}]},"timestamp":"2021-03-30 22:16:08"}
{"service":"user-service","level":"error","message":{"_original":{"article":"update method is work great.","title":"it updated work fine do you think so"},"details":[{"message":"\"article\" length must be at least 50 characters long","path":["article"],"type":"string.min","context":{"limit":50,"value":"update method is work great.","label":"article","key":"article"}}]},"timestamp":"2021-03-30 22:16:37"}
{"service":"user-service","level":"error","message":{"_original":{"article":"update method is work great.","title":"So to answer Matt's question, “an hour” is correct, because “hour” starts with a vowel sound. People seem to ask most often about words that start with the letters H and U because sometimes these words start with vowel sounds and sometimes they start with consonant sounds. For example, it is “a historic monument” because “historic” starts with an H sound, but it is “an honorable fellow” because “honorable” starts with an O sound. Similarly, it is “a Utopian idea,” but “an unfair world.”"},"details":[{"message":"\"article\" length must be at least 50 characters long","path":["article"],"type":"string.min","context":{"limit":50,"value":"update method is work great.","label":"article","key":"article"}}]},"timestamp":"2021-03-30 22:17:01"}
{"service":"user-service","level":"error","message":{"_original":{"article":"update method is work great.","title":"it updated work file"},"details":[{"message":"\"article\" length must be at least 50 characters long","path":["article"],"type":"string.min","context":{"limit":50,"value":"update method is work great.","label":"article","key":"article"}}]},"timestamp":"2021-03-30 22:17:59"}
{"service":"user-service","level":"error","message":{"_original":{"article":"update method is work great.","title":"it updated work file"},"details":[{"message":"\"article\" length must be at least 50 characters long","path":["article"],"type":"string.min","context":{"limit":50,"value":"update method is work great.","label":"article","key":"article"}}]},"timestamp":"2021-03-30 22:19:17"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:21:41"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:22:36"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:23:57"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:25:15"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:25:44"}
{"service":"user-service","level":"error","message":{"expose":true,"statusCode":400,"status":400,"body":"{\r\n    \"article\":\"Baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n}","type":"entity.parse.failed"},"timestamp":"2021-03-30 22:26:07"}
{"service":"user-service","level":"error","message":{"_original":{"article":"Baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"},"details":[{"message":"\"title\" is required","path":["title"],"type":"any.required","context":{"label":"title","key":"title"}}]},"timestamp":"2021-03-30 22:26:15"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:28:47"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:48:49"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-03-30 22:52:23"}
{"service":"user-service","level":"error","message":{"_original":{"title":"title of article","article":"The body of article."},"details":[{"message":"\"article\" length must be at least 50 characters long","path":["article"],"type":"string.min","context":{"limit":50,"value":"The body of article.","label":"article","key":"article"}}]},"timestamp":"2021-03-30 22:52:58"}
{"service":"user-service","level":"error","message":{"_original":{"title":"title of articleaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","article":"The body of article."},"details":[{"message":"\"article\" length must be at least 50 characters long","path":["article"],"type":"string.min","context":{"limit":50,"value":"The body of article.","label":"article","key":"article"}}]},"timestamp":"2021-03-30 22:53:08"}
{"service":"user-service","level":"error","message":{"_original":{"title":"title of articleaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","article":"The body of articleaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.","id":15},"details":[{"message":"\"id\" is not allowed","path":["id"],"type":"object.unknown","context":{"child":"id","label":"id","value":15,"key":"id"}}]},"timestamp":"2021-03-30 22:53:44"}
{"service":"user-service","level":"error","message":{"_original":{"first_name":"loki","last_name":"lol","email":"lokii@somewhere.com","password":"h","birth_date":"1994-12-15"},"details":[{"message":"\"password\" length must be at least 5 characters long","path":["password"],"type":"string.min","context":{"limit":5,"value":"h","label":"password","key":"password"}}]},"timestamp":"2021-03-30 22:59:11"}
{"service":"user-service","level":"error","message":{},"timestamp":"2021-04-05 19:04:34"}
